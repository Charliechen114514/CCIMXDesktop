function(dumping_build)
message(STATUS  "About to dump the message of the building in order to ensure the settings")
message(STATUS  "-----------------------------------------------------")
message(STATUS  "CCIMXDestop Version: ${CCIMXDESKTOP_VERSION_FULL}")
message(STATUS  "CCIMXDestop Main Version: ${CCIMXDESKTOP_VERSION_MAJOR}")
message(STATUS  "CCIMXDestop Sub Version: ${CCIMXDESKTOP_VERSION_MINOR}")
message(STATUS  "CCIMXDestop Patch Version: ${CCIMXDESKTOP_VERSION_PATCH}")
message(STATUS  "-----------------------------------------------------")
message(STATUS "Install Issue End: ")
message(STATUS "-----------------------------------------------------")
message(STATUS "The base dirent of installations:   CCIMX_ALL_RELEASE_DIR_BASE = ${CCIMX_ALL_RELEASE_DIR_BASE}")
message(STATUS "Current kits installations:         CCIMX_ALL_RELEASE_DIR      = ${CCIMX_ALL_RELEASE_DIR}")
message(STATUS "Extern app install locations:       CCIMX_EXTERNAL_APP_BASE_DIR= ${CCIMX_EXTERNAL_APP_BASE_DIR}")
message(STATUS "-----------------------------------------------------")
message(STATUS "Dumping the built in apps")
message(STATUS "About Application: introducing the desktop with support")
message(STATUS "About SimpleDrawer: Simple and Free drawer to notify your imaginations")
message(STATUS "About CCIMXNoter: Must Basic Notepad in CCIMXDesktop utilities")
message(STATUS "About ImageWalker: Simple and Free Image Browsing App, which is really easy lol")
message(STATUS "About Calculator: builtin simple calculator")
message(STATUS "-----------------------------------------------------")
message(STATUS "Dumping the external apps: ")
message(STATUS "Weather Application Built status Due to INCLUDE_WEATHER_APP:    ${INCLUDE_WEATHER_APP}")
message(STATUS "PDF Browser Built status Due to INCLUDE_PDF_BROWSER_APP:        ${INCLUDE_PDF_BROWSER_APP}")
message(STATUS "Camera Application Built status Due to INCLUDE_CAMERA_APP:      ${INCLUDE_CAMERA_APP}")
message(STATUS "File Ramber Built status due to INCLUDE_FILERAMBER_APP:         ${INCLUDE_FILERAMBER_APP}")
message(STATUS "System State Built due to INCLUDE_SYSTEMSTATUS_APP:             ${INCLUDE_SYSTEMSTATUS_APP}")
message(STATUS "Media Player Built due to INCLUDE_MEDIAPLAYER_APP:              ${INCLUDE_MEDIAPLAYER_APP}")
message(STATUS "Professional App Built status due to INCLUDE_PROFESSIONAL_APP:  ${INCLUDE_PROFESSIONAL_APP}")
message(STATUS "LED Controller Built status due to INCLUDE_LED_APP:             ${INCLUDE_LED_APP}")
message(STATUS "Environment Built status due to INCLUDE_ENV_APP:                ${INCLUDE_ENV_APP}")
message(STATUS "Sports Health Built status due to INCLUDE_SPORT_APP:            ${INCLUDE_SPORT_APP}")
message(STATUS "OpenCV Adapters Built status due to INCLUDE_OPENCV_QT_ADAPTER:  ${INCLUDE_OPENCV_QT_ADAPTER}")
message(STATUS "Image Processor Built status due to INCLUDE_IMAGE_PROCESSOR:    ${INCLUDE_IMAGE_PROCESSOR}")
message(STATUS "Net Helper App Built status due to INCLUDE_NETHELPER_APP:       ${INCLUDE_NETHELPER_APP}")
message(STATUS "EasyNote Built due to INCLUDE_EASYNOTE_APP:                     ${INCLUDE_EASYNOTE_APP}")
message(STATUS "-----------------------------------------------------")
message(STATUS "Dumping the game apps: ")
message(STATUS "CCIMX_DinoGame Built status due to INCLUDE_DINO_GAME:           ${INCLUDE_DINO_GAME}")
message(STATUS "-----------------------------------------------------")
message(STATUS "Test Built and runtime processing status due to:                ${CCIMX_BUILD_TEST}")
message(STATUS "-----------------------------------------------------")
message(STATUS "Dumping Documentations summon issues: ")
message(STATUS "Doxygen Documentations Built status due to CCIMX_DESKTOP_DOCGEN_REQ: ${CCIMX_DESKTOP_DOCGEN_REQ}")
if(CCIMX_DESKTOP_DOCGEN_REQ)
    message(STATUS "Doxygen Documentations Template: ${CCIMX_DOXYGEN_DOCUNENT_DOXYFILE_TEMPLATE}")
    message(STATUS "Doxygen Documentations Base Dirent: ${CCIMX_DOXYGEN_DOCUMENT_BASE_PATH}")
    message(STATUS "Doxygen Documentations Output Dirent: ${DOXYGEN_OUT}")
    message(STATUS "To Summon the Documentations, you need to run cmake --build . --target doc in your build dirent to process your local documentation build!")
else()
    message(STATUS "If you need to generate the documentations, please set the CCIMX_DESKTOP_DOCGEN_REQ to ON")
endif()
message(STATUS "-----------------------------------------------------")

endfunction()
