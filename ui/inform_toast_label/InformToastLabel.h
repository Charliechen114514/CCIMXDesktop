/**
 * @file InformToastLabel.h
 * @brief Defines the InformToastLabel class, a custom widget for displaying toast notifications.
 */

#ifndef INFORMTOASTLABEL_H
#define INFORMTOASTLABEL_H

#include <QWidget> // Base class for InformToastLabel

// Forward declaration of the UI namespace generated by Qt Designer
namespace Ui {
class InformToastLabel;
}

/**
 * @class InformToastLabel
 * @brief A custom QWidget designed to display an informative toast notification.
 *
 * This widget provides a visual component for displaying transient, non-intrusive
 * notifications to the user. It typically includes a title, a main text message,
 * and an optional icon. The appearance can be customized through its `paintEvent`.
 * It is designed to work with a UI file generated by Qt Designer for its layout.
 */
class InformToastLabel : public QWidget {
Q_OBJECT // Enables Qt's meta-object system features like signals and slots

    public :
    /**
     * @brief Constructs an InformToastLabel object.
     * @param parent A pointer to the parent widget, if any. Defaults to `nullptr`.
     */
    explicit InformToastLabel(QWidget* parent = nullptr);

    /**
     * @brief Destroys the InformToastLabel object.
     * 	 * This destructor is responsible for cleaning up resources, particularly
     * the dynamically allocated UI object.
     */
    ~InformToastLabel();

    /**
     * @brief Sets the title text for the toast notification.
     * @param title The QString containing the title to be displayed.
     */
    void setTitle(const QString& title);

    /**
     * @brief Sets the main text message for the toast notification.
     * @param text The QString containing the main message to be displayed.
     */
    void setText(const QString& text);

    /**
     * @brief Sets the icon for the toast notification.
     * 	 * This method expects a QString typically representing a file path to an
     * image or an icon theme identifier. The implementation will load and display
     * this icon next to the title/text.
     * @param icons The QString containing the path or identifier for the icon.
     */
    void setIcon(const QString& icons);

protected:
    /**
     * @brief Overrides the default paint event for the widget.
     * 	 * This method is responsible for custom drawing operations for the `InformToastLabel`,
     * such as background, borders, or any other visual elements not handled by the
     * Qt Designer-generated UI.
     * @param event A pointer to the `QPaintEvent` object that contains information about the paint area.
     */
    void paintEvent(QPaintEvent* event) override;

private:
    /**
     * @brief A pointer to the UI object generated by Qt Designer.
     * 	 * This member provides access to the widgets and layout defined in the `.ui` file
     * associated with `InformToastLabel`.
     */
    Ui::InformToastLabel* ui;
};

#endif // INFORMTOASTLABEL_H
