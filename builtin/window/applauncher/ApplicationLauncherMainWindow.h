#ifndef APPLICATIONLAUNCHERMAINWINDOW_H
#define APPLICATIONLAUNCHERMAINWINDOW_H

#include <QMainWindow>

class ApplicationWrapper;
class AppWidget;
class DesktopMainWindow;

namespace Ui {
class ApplicationLauncherMainWindow;
}

/**
 * @brief The ApplicationLauncherMainWindow class provides the main UI window for launching applications.
 *
 * This class handles application setup, interaction with AppWidget and ApplicationWrapper,
 * and provides several slots for handling user actions and state transitions.
 */
class ApplicationLauncherMainWindow : public QMainWindow {
    Q_OBJECT

public:
    /**
     * @brief Constructs the ApplicationLauncherMainWindow.
     * @param parent The parent window, typically a DesktopMainWindow instance.
     */
    explicit ApplicationLauncherMainWindow(DesktopMainWindow* parent = nullptr);

    /**
     * @brief Destroys the ApplicationLauncherMainWindow.
     */
    ~ApplicationLauncherMainWindow();

    /**
     * @brief Shows the launcher window.
     */
    void show();

private slots:
    /**
     * @brief Processes checkbox selections and updates state accordingly.
     */
    void process_according_per_checkbox();

    /**
     * @brief Performs application de-patching logic.
     */
    void process_depatch();

    /**
     * @brief Collects commands that were de-patched for further execution or record.
     */
    void collect_to_commands_depatched();

    /**
     * @brief Installs application into the main window.
     */
    void install_to_window();

private:
    /**
     * @brief The UI pointer generated by Qt Designer.
     */
    Ui::ApplicationLauncherMainWindow* ui;

    /**
     * @brief Wrapper for managing application launch and lifecycle.
     */
    ApplicationWrapper* wrapper { nullptr };

    /**
     * @brief UI widget displaying application details and interaction buttons.
     */
    AppWidget* appWidget { nullptr };

    /**
     * @brief Pointer to the main desktop window, used as parent.
     */
    DesktopMainWindow* window;

    /**
     * @brief Prepares memory and initializes internal state before usage.
     */
    void setup_internal_memory();

    /**
     * @brief Initializes the ApplicationWrapper.
     */
    void setup_appwrapper();

    /**
     * @brief Sets up the AppWidget with user-specific or default settings.
     */
    void setup_appwidgets_settings();

    /**
     * @brief Called after successful installation or setup of the application.
     */
    void process_post_success();

    /**
     * @brief Called after finishing any major operation, such as install or uninstall.
     */
    void process_post_finish();

    /**
     * @brief Indicates whether the current shell should be deleted during processing.
     */
    bool shell_delete_current { true };
};

#endif // APPLICATIONLAUNCHERMAINWINDOW_H
